<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.qcc.mymapper.HouseRoomCustomerMapper" >

	<!-- 根据查询条件查询房态图 -->	
 	<select id="roompattern" resultType="cn.com.qcc.queryvo.HouseRoomCustomer" parameterType="cn.com.qcc.queryvo.HouseVo">
 			SELECT 
				house.houseid ,
				IFNULL(house.floor,1)floor ,
				house.housestatus ,
				house.buildingid ,
				house.house_number ,
				house.update_time ,
				IFNULL(housepay.usercentnum,'')usercentnum ,
				IFNULL(`user`.telephone,'')telephone ,
				IFNULL(`profile`.real_name,house.house_number)realname ,
				housepay.end_time cententtime ,
				IFNULL(area.`name`,'') trading ,
				IFNULL(village.villagename,'') villagename ,
				IFNULL(building.building,'')building , 
				ifnull(housepay.usercentid , -1) usercentid,
		    	IFNULL(eventcount.totalcount,0)  housecount ,
		    	housepay.needpaytime
		 from house
		 LEFT JOIN (  	
  				SELECT MIN(create_time) needpaytime   , 
								 usercent.usercentid   , 
						     housepay.houseid ,
							   usercent.userid ,
								 usercent.usercentnum ,
						     usercent.end_time
					from housepay 
					LEFT JOIN payexpert on payexpert.payexpertid = housepay.payexpertid
					LEFT JOIN usercent on usercent.usercentid = payexpert.usercentid
					where housepay.paystate = 1  and usercent.centstate in (1,2)
					GROUP BY usercent.usercentnum
		  )  housepay ON  housepay.houseid = house.houseid
			LEFT JOIN `user` on `user`.userid = housepay.userid
			LEFT JOIN `profile` on `user`.userid = `profile`.user_id
			LEFT JOIN building on house.buildingid = building.buildingid
			LEFT JOIN village on building.villageid = village.villageid
			LEFT JOIN area on area.`code` = village.`code`  
			LEFT JOIN (
				SELECT
					COUNT(1) totalcount ,
					buildingid 
				FROM
					house
				WHERE  
				house.user_id in (  ${inUserIds} )
				AND house.housestatus NOT IN (3)
				GROUP BY house.buildingid
		  )eventcount on eventcount.buildingid = building.buildingid
		  where house.user_id in (  ${inUserIds} )  and house.housestatus !='3'
		<!-- 这里封装房源的查询条件 --> 
 	 	<include refid="cn.com.qcc.mymapper.SearchWhere.query_roomparrent_where"></include>
 	 	<include refid="cn.com.qcc.mymapper.SearchWhere.query_house_where"></include>
		ORDER BY house.buildingid ,house.floor
		<!-- 分页的查询条件 -->
		<if test="pagequery !=null ">
			limit #{pagequery.pagestart} , #{pagequery.pagesize}
		</if>
 	</select>
 	
 	
 	<!-- 根据查询条件查询房态图 -->	
 	<select id="roompatternCount" resultType="integer" parameterType="cn.com.qcc.queryvo.HouseVo">
 		SELECT 
				 count(1)
		 from house
		 LEFT JOIN (  	
  				SELECT           MIN(create_time) needpaytime   , 
								 usercent.usercentid   , 
						         housepay.houseid ,
							     usercent.userid ,
								 usercent.usercentnum ,
						     usercent.end_time
					from housepay 
					LEFT JOIN payexpert on payexpert.payexpertid = housepay.payexpertid
					LEFT JOIN usercent on usercent.usercentid = payexpert.usercentid
					where housepay.paystate = 1  and usercent.centstate in (1,2)
					GROUP BY usercent.usercentnum
		  )  housepay ON  housepay.houseid = house.houseid
			LEFT JOIN `user` on `user`.userid = housepay.userid
			LEFT JOIN `profile` on `user`.userid = `profile`.user_id
			LEFT JOIN building on house.buildingid = building.buildingid
			LEFT JOIN village on building.villageid = village.villageid
			LEFT JOIN area on area.`code` = village.`code`  
			LEFT JOIN (
				SELECT
					COUNT(1) totalcount ,
					buildingid 
				FROM
					house
				WHERE
					house.user_id in (  ${inUserIds}   )
				AND house.housestatus NOT IN (3)
				GROUP BY house.buildingid
		  )eventcount on eventcount.buildingid = building.buildingid
		  where house.user_id  in (  ${inUserIds}  ) and house.housestatus !='3'
		<!-- 这里封装房源的查询条件 --> 
 	 	<include refid="cn.com.qcc.mymapper.SearchWhere.query_roomparrent_where"></include>
 	 	<include refid="cn.com.qcc.mymapper.SearchWhere.query_house_where"></include>
		ORDER BY house.buildingid ,house.floor
		<!-- 分页的查询条件 -->
		<if test="pagequery !=null ">
			limit #{pagequery.pagestart} , #{pagequery.pagesize}
		</if>
 	</select>
 	
 	
 	
 	<select id="getPayModel" parameterType="java.util.List"
		resultType="cn.com.qcc.queryvo.HousepayCustomer">
		SELECT payexpert.usercentid , housepay.* from housepay
			LEFT JOIN payexpert on housepay.payexpertid = payexpert.payexpertid
		where payexpert.usercentid in 
		<foreach item="item" collection="idsList" separator="," open="("
			close=")" index="">
			#{item, jdbcType=VARCHAR}
		</foreach>
	</select>
	
	
	<!-- 根据租约id查询房源 -->
	<select id="searchCentHouseMess"  resultType="cn.com.qcc.queryvo.UserCentCustomer">
			SELECT
				`user`.telephone,
				usercent.usercentnum,
				building.building,
				village.villagename,
				house.houseid,
				house.house_number
				
			FROM
				usercent
			LEFT JOIN `user` ON usercent.userid = `user`.userid
			LEFT JOIN house ON usercent.houseid = house.houseid
			LEFT JOIN building ON house.buildingid = building.buildingid
			LEFT JOIN village ON building.villageid = village.villageid
			where usercent.usercentid = #{usercentid}
	</select>
	
	
	
	
	<!-- 根据房东ID查询出对应区域分组-->
	<select id="getlandareaname" parameterType="cn.com.qcc.queryvo.BuildingCustomer"
		resultType="cn.com.qcc.queryvo.BuildingCustomer">
				SELECT  area.`code`,  area.`name` trading
					FROM  area
				WHERE
			area.`code` IN (
				SELECT area.parentId  FROM
					area
				WHERE
					area.`code` IN 
					<foreach item="item" collection="idsList" separator="," open="("
						close=")" index="">
						#{item, jdbcType=VARCHAR}
				    </foreach> 
			)
	</select>
	
	
	
	<!-- 根据房东ID查询出楼栋列表-->
	<select id="getlandbuildingname" 
		resultType="cn.com.qcc.queryvo.BuildingCustomer">
				SELECT building.building ,village.villagename ,building.buildingid,
			detaileaddress.detailes
		 from building 
			INNER JOIN village on building.villageid = village.villageid
			and building.buildingid in 
			
			<foreach item="item" collection="idsList" separator="," open="("
					close=")" index="">
					#{item, jdbcType=VARCHAR}
			</foreach> 
			
			
		<if test="code != null and code !=''">
			 and village.`code` like  CONCAT('',#{code},'%')
		</if>
		  INNER JOIN detaileaddress on detaileaddress.detailid = building.detailid
	</select>
	
	
	
	<!-- 根据房东ID查询出楼栋列表-->
	<select id="getpayMonery" 
		resultType="cn.com.qcc.queryvo.HouseRoomCustomer">
			SELECT
				housepay.* ,usercent.usercentnum  ,
				usercent.userid ,usercent.landuserid ,
				usercent.manageruserid ,
				house.house_number house_number
			FROM
				payexpert
			LEFT JOIN usercent on payexpert.usercentid = usercent.usercentid
			INNER JOIN (
			
			SELECT
				IFNULL(SUM(centprices), 0) centprices  , houseid ,housepay.payexpertid
			FROM
				housepay
			WHERE
				paystate = 1
				and housepayid in
				<foreach item="item" collection="idsList" separator="," open="("
					close=")" index="">
					#{item, jdbcType=VARCHAR}
				</foreach> 
			GROUP BY
				houseid
			LIMIT 0,1
			) housepay on housepay.payexpertid = payexpert.payexpertid
		LEFT JOIN house on house.houseid = housepay.houseid
	</select>
 	
 	
 	
 	<!-- 修改订单为已经支付状态-->
	<select id="updateHousePayIsPay"  >
			UPDATE housepay set housepay.paystate = 2 where housepay.housepayid in 
				<foreach item="item" collection="idsList" separator="," open="("
					close=")" index="">
					#{item, jdbcType=VARCHAR}
				</foreach> 
			
	</select>
	
	
	<!-- 修改订单为已经删除状态-->
	<select id="updateHousePayIsDelete"  >
			UPDATE housepay set housepay.paystate = 3 where housepay.housepayid in 
				<foreach item="item" collection="idsList" separator="," open="("
					close=")" index="">
					#{item, jdbcType=VARCHAR}
				</foreach> 
	</select>
	
	
	
	
	<!-- 根据订单id查询其中一条租约-->
	<select id="searchUserCentByHousePayIds" resultType="cn.com.qcc.pojo.Usercent" >
			
			SELECT * from usercent where usercentid in (
			
			
			SELECT usercentid from payexpert where payexpertid in (
			SELECT payexpertid from housepay 
				
			where housepay.housepayid in 
			
				<foreach item="item" collection="idsList" separator="," open="("
					close=")" index="">
					#{item, jdbcType=VARCHAR}
				</foreach> 
			
			)
			) 
	</select>
	
	
	
	<!-- 统计已经支付的订单数据-->
	<select id="counthousepayIsPay"  resultType="integer" >
	
		SELECT COUNT(1) from housepay 
			
			where housepay.paystate = 2 and housepayid in (
				<foreach item="item" collection="idsList" separator="," open="("
					close=")" index="">
					#{item, jdbcType=VARCHAR}
				</foreach> 
			)
	</select>
 	



	<!-- 查询用户管理的区域的集合-->
	<select id="searchTradingList"  resultType="string" >
		SELECT DISTINCT *  from (
		
		SELECT 
							village.`code`
						FROM
							house
						LEFT JOIN building ON house.buildingid = building.buildingid
						LEFT JOIN village ON building.villageid = village.villageid
						WHERE
							house.user_id in ( ${inUserIds} ) and village.`code` is not null 
						AND house.housestatus != '3'
		UNION 
		SELECT village.`code`  from  buildinglandlord 
			LEFT JOIN building on buildinglandlord.buildingid = building.buildingid
			LEFT JOIN village on building.villageid = village.villageid
			INNER JOIN landlord on buildinglandlord.landlordid = landlord.landuserid
		  WHERE buildinglandlord.landlordid in ( ${inUserIds} ) AND landlord.landstate = 2  
		  )a
	</select>
	
	
	
	<!-- 根据用户id查询楼栋id的集合-->
	<select id="searchBuildingids"  resultType="string" >
		
		SELECT DISTINCT * from (
		
		SELECT DISTINCT house.buildingid from house where house.user_id in ( ${inUserIds} )
					and house.housestatus !='3'
		UNION
		SELECT buildinglandlord.buildingid from buildinglandlord 
		INNER JOIN landlord on buildinglandlord.landlordid = landlord.landuserid
			where buildinglandlord.landlordid in ( ${inUserIds} ) AND landlord.landstate = 2  
		) a
	</select>

  
</mapper>