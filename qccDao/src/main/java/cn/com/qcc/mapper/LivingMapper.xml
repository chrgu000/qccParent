<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.qcc.mapper.LivingMapper" >
  <resultMap id="BaseResultMap" type="cn.com.qcc.pojo.Living" >
    <id column="livingid" property="livingid" jdbcType="BIGINT" />
    <result column="typeid" property="typeid" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="orderasc" property="orderasc" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="keyword" property="keyword" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    livingid, typeid, content, orderasc, state, keyword
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.qcc.pojo.LivingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from living
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from living
    where livingid = #{livingid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from living
    where livingid = #{livingid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.qcc.pojo.LivingExample" >
    delete from living
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.qcc.pojo.Living" >
    insert into living (livingid, typeid, content, 
      orderasc, state, keyword
      )
    values (#{livingid,jdbcType=BIGINT}, #{typeid,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{orderasc,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{keyword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.qcc.pojo.Living" >
    insert into living
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="livingid != null" >
        livingid,
      </if>
      <if test="typeid != null" >
        typeid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="orderasc != null" >
        orderasc,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="keyword != null" >
        keyword,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="livingid != null" >
        #{livingid,jdbcType=BIGINT},
      </if>
      <if test="typeid != null" >
        #{typeid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="orderasc != null" >
        #{orderasc,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="keyword != null" >
        #{keyword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.qcc.pojo.LivingExample" resultType="java.lang.Integer" >
    select count(*) from living
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update living
    <set >
      <if test="record.livingid != null" >
        livingid = #{record.livingid,jdbcType=BIGINT},
      </if>
      <if test="record.typeid != null" >
        typeid = #{record.typeid,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.orderasc != null" >
        orderasc = #{record.orderasc,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.keyword != null" >
        keyword = #{record.keyword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update living
    set livingid = #{record.livingid,jdbcType=BIGINT},
      typeid = #{record.typeid,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      orderasc = #{record.orderasc,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      keyword = #{record.keyword,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.qcc.pojo.Living" >
    update living
    <set >
      <if test="typeid != null" >
        typeid = #{typeid,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="orderasc != null" >
        orderasc = #{orderasc,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="keyword != null" >
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
    </set>
    where livingid = #{livingid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.qcc.pojo.Living" >
    update living
    set typeid = #{typeid,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      orderasc = #{orderasc,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      keyword = #{keyword,jdbcType=VARCHAR}
    where livingid = #{livingid,jdbcType=BIGINT}
  </update>
  
     <select id="searchByTypeId" parameterType="long" resultType="cn.com.qcc.pojo.Living" >
  		SELECT * from living
			 where living.typeid= #{typeid} and living.state = 1 
		 ORDER BY living.`orderasc` asc 
  </select>
  
   <select id="searchAllByTypeId" parameterType="long" resultType="cn.com.qcc.pojo.Living" >
  		SELECT * from living
			 where living.typeid= #{typeid}  
		 ORDER BY living.`orderasc` asc 
  </select>
  
  
   <select id="getOrder" parameterType="cn.com.qcc.pojo.Living" resultType="integer" >
  		SELECT IFNULL(MAX(living.orderasc),0) + 1  from living   
  </select>
</mapper>