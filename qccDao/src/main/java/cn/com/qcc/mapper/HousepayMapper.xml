<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.qcc.mapper.HousepayMapper" >
  <resultMap id="BaseResultMap" type="cn.com.qcc.pojo.Housepay" >
    <id column="housepayid" property="housepayid" jdbcType="BIGINT" />
    <result column="houseid" property="houseid" jdbcType="BIGINT" />
    <result column="financeid" property="financeid" jdbcType="BIGINT" />
    <result column="payexpertid" property="payexpertid" jdbcType="BIGINT" />
    <result column="paystate" property="paystate" jdbcType="INTEGER" />
    <result column="currentstate" property="currentstate" jdbcType="INTEGER" />
    <result column="centprices" property="centprices" jdbcType="DOUBLE" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    housepayid, houseid, financeid, payexpertid, paystate, currentstate, centprices, 
    description, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.qcc.pojo.HousepayExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from housepay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from housepay
    where housepayid = #{housepayid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from housepay
    where housepayid = #{housepayid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.qcc.pojo.HousepayExample" >
    delete from housepay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.qcc.pojo.Housepay" >
   <selectKey  resultType="long"  order="AFTER"  keyProperty="housepayid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into housepay (housepayid, houseid, financeid, 
      payexpertid, paystate, currentstate, 
      centprices, description, create_time, 
      update_time)
    values (#{housepayid,jdbcType=BIGINT}, #{houseid,jdbcType=BIGINT}, #{financeid,jdbcType=BIGINT}, 
      #{payexpertid,jdbcType=BIGINT}, #{paystate,jdbcType=INTEGER}, #{currentstate,jdbcType=INTEGER}, 
      #{centprices,jdbcType=DOUBLE}, #{description,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{update_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.qcc.pojo.Housepay" >
   <selectKey  resultType="long"  order="AFTER"  keyProperty="housepayid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into housepay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="housepayid != null" >
        housepayid,
      </if>
      <if test="houseid != null" >
        houseid,
      </if>
      <if test="financeid != null" >
        financeid,
      </if>
      <if test="payexpertid != null" >
        payexpertid,
      </if>
      <if test="paystate != null" >
        paystate,
      </if>
      <if test="currentstate != null" >
        currentstate,
      </if>
      <if test="centprices != null" >
        centprices,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="housepayid != null" >
        #{housepayid,jdbcType=BIGINT},
      </if>
      <if test="houseid != null" >
        #{houseid,jdbcType=BIGINT},
      </if>
      <if test="financeid != null" >
        #{financeid,jdbcType=BIGINT},
      </if>
      <if test="payexpertid != null" >
        #{payexpertid,jdbcType=BIGINT},
      </if>
      <if test="paystate != null" >
        #{paystate,jdbcType=INTEGER},
      </if>
      <if test="currentstate != null" >
        #{currentstate,jdbcType=INTEGER},
      </if>
      <if test="centprices != null" >
        #{centprices,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.qcc.pojo.HousepayExample" resultType="java.lang.Integer" >
    select count(*) from housepay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update housepay
    <set >
      <if test="record.housepayid != null" >
        housepayid = #{record.housepayid,jdbcType=BIGINT},
      </if>
      <if test="record.houseid != null" >
        houseid = #{record.houseid,jdbcType=BIGINT},
      </if>
      <if test="record.financeid != null" >
        financeid = #{record.financeid,jdbcType=BIGINT},
      </if>
      <if test="record.payexpertid != null" >
        payexpertid = #{record.payexpertid,jdbcType=BIGINT},
      </if>
      <if test="record.paystate != null" >
        paystate = #{record.paystate,jdbcType=INTEGER},
      </if>
      <if test="record.currentstate != null" >
        currentstate = #{record.currentstate,jdbcType=INTEGER},
      </if>
      <if test="record.centprices != null" >
        centprices = #{record.centprices,jdbcType=DOUBLE},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null" >
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update housepay
    set housepayid = #{record.housepayid,jdbcType=BIGINT},
      houseid = #{record.houseid,jdbcType=BIGINT},
      financeid = #{record.financeid,jdbcType=BIGINT},
      payexpertid = #{record.payexpertid,jdbcType=BIGINT},
      paystate = #{record.paystate,jdbcType=INTEGER},
      currentstate = #{record.currentstate,jdbcType=INTEGER},
      centprices = #{record.centprices,jdbcType=DOUBLE},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.qcc.pojo.Housepay" >
    update housepay
    <set >
      <if test="houseid != null" >
        houseid = #{houseid,jdbcType=BIGINT},
      </if>
      <if test="financeid != null" >
        financeid = #{financeid,jdbcType=BIGINT},
      </if>
      <if test="payexpertid != null" >
        payexpertid = #{payexpertid,jdbcType=BIGINT},
      </if>
      <if test="paystate != null" >
        paystate = #{paystate,jdbcType=INTEGER},
      </if>
      <if test="currentstate != null" >
        currentstate = #{currentstate,jdbcType=INTEGER},
      </if>
      <if test="centprices != null" >
        centprices = #{centprices,jdbcType=DOUBLE},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where housepayid = #{housepayid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.qcc.pojo.Housepay" >
    update housepay
    set houseid = #{houseid,jdbcType=BIGINT},
      financeid = #{financeid,jdbcType=BIGINT},
      payexpertid = #{payexpertid,jdbcType=BIGINT},
      paystate = #{paystate,jdbcType=INTEGER},
      currentstate = #{currentstate,jdbcType=INTEGER},
      centprices = #{centprices,jdbcType=DOUBLE},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where housepayid = #{housepayid,jdbcType=BIGINT}
  </update>
</mapper>