<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.qcc.mapper.ProfileMapper" >
  <resultMap id="BaseResultMap" type="cn.com.qcc.pojo.Profile" >
    <id column="profileid" property="profileid" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="unionid" property="unionid" jdbcType="VARCHAR" />
    <result column="address_id" property="address_id" jdbcType="BIGINT" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="user_name" property="user_name" jdbcType="VARCHAR" />
    <result column="real_name" property="real_name" jdbcType="VARCHAR" />
    <result column="identity" property="identity" jdbcType="VARCHAR" />
    <result column="idpictures" property="idpictures" jdbcType="VARCHAR" />
    <result column="homeaddress" property="homeaddress" jdbcType="VARCHAR" />
    <result column="mysign" property="mysign" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="mail" property="mail" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="BIGINT" />
    <result column="signstate" property="signstate" jdbcType="INTEGER" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="sign_time" property="sign_time" jdbcType="TIMESTAMP" />
    <result column="userPostImage" property="userPostImage" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    profileid, user_id, unionid, address_id, avatar, user_name, real_name, identity, 
    idpictures, homeaddress, mysign, sex, mail, code, signstate, create_time, birthday, 
    sign_time, userPostImage
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.qcc.pojo.ProfileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from profile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from profile
    where profileid = #{profileid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from profile
    where profileid = #{profileid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.qcc.pojo.ProfileExample" >
    delete from profile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.qcc.pojo.Profile" >
  
   <selectKey  resultType="long"  order="AFTER"  keyProperty="profileid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into profile (profileid, user_id, unionid, 
      address_id, avatar, user_name, 
      real_name, identity, idpictures, 
      homeaddress, mysign, sex, 
      mail, code, signstate, 
      create_time, birthday, sign_time, 
      userPostImage)
    values (#{profileid,jdbcType=BIGINT}, #{user_id,jdbcType=BIGINT}, #{unionid,jdbcType=VARCHAR}, 
      #{address_id,jdbcType=BIGINT}, #{avatar,jdbcType=VARCHAR}, #{user_name,jdbcType=VARCHAR}, 
      #{real_name,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}, #{idpictures,jdbcType=VARCHAR}, 
      #{homeaddress,jdbcType=VARCHAR}, #{mysign,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{mail,jdbcType=VARCHAR}, #{code,jdbcType=BIGINT}, #{signstate,jdbcType=INTEGER}, 
      #{create_time,jdbcType=TIMESTAMP}, #{birthday,jdbcType=TIMESTAMP}, #{sign_time,jdbcType=TIMESTAMP}, 
      #{userPostImage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.qcc.pojo.Profile" >
  
   <selectKey  resultType="long"  order="AFTER"  keyProperty="profileid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into profile
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="profileid != null" >
        profileid,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="unionid != null" >
        unionid,
      </if>
      <if test="address_id != null" >
        address_id,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="user_name != null" >
        user_name,
      </if>
      <if test="real_name != null" >
        real_name,
      </if>
      <if test="identity != null" >
        identity,
      </if>
      <if test="idpictures != null" >
        idpictures,
      </if>
      <if test="homeaddress != null" >
        homeaddress,
      </if>
      <if test="mysign != null" >
        mysign,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="mail != null" >
        mail,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="signstate != null" >
        signstate,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="sign_time != null" >
        sign_time,
      </if>
      <if test="userPostImage != null" >
        userPostImage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="profileid != null" >
        #{profileid,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="unionid != null" >
        #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="address_id != null" >
        #{address_id,jdbcType=BIGINT},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null" >
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="real_name != null" >
        #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="idpictures != null" >
        #{idpictures,jdbcType=VARCHAR},
      </if>
      <if test="homeaddress != null" >
        #{homeaddress,jdbcType=VARCHAR},
      </if>
      <if test="mysign != null" >
        #{mysign,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=BIGINT},
      </if>
      <if test="signstate != null" >
        #{signstate,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sign_time != null" >
        #{sign_time,jdbcType=TIMESTAMP},
      </if>
      <if test="userPostImage != null" >
        #{userPostImage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.qcc.pojo.ProfileExample" resultType="java.lang.Integer" >
    select count(*) from profile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update profile
    <set >
      <if test="record.profileid != null" >
        profileid = #{record.profileid,jdbcType=BIGINT},
      </if>
      <if test="record.user_id != null" >
        user_id = #{record.user_id,jdbcType=BIGINT},
      </if>
      <if test="record.unionid != null" >
        unionid = #{record.unionid,jdbcType=VARCHAR},
      </if>
      <if test="record.address_id != null" >
        address_id = #{record.address_id,jdbcType=BIGINT},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.user_name != null" >
        user_name = #{record.user_name,jdbcType=VARCHAR},
      </if>
      <if test="record.real_name != null" >
        real_name = #{record.real_name,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null" >
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.idpictures != null" >
        idpictures = #{record.idpictures,jdbcType=VARCHAR},
      </if>
      <if test="record.homeaddress != null" >
        homeaddress = #{record.homeaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.mysign != null" >
        mysign = #{record.mysign,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null" >
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=BIGINT},
      </if>
      <if test="record.signstate != null" >
        signstate = #{record.signstate,jdbcType=INTEGER},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sign_time != null" >
        sign_time = #{record.sign_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userPostImage != null" >
        userPostImage = #{record.userPostImage,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update profile
    set profileid = #{record.profileid,jdbcType=BIGINT},
      user_id = #{record.user_id,jdbcType=BIGINT},
      unionid = #{record.unionid,jdbcType=VARCHAR},
      address_id = #{record.address_id,jdbcType=BIGINT},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      user_name = #{record.user_name,jdbcType=VARCHAR},
      real_name = #{record.real_name,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=VARCHAR},
      idpictures = #{record.idpictures,jdbcType=VARCHAR},
      homeaddress = #{record.homeaddress,jdbcType=VARCHAR},
      mysign = #{record.mysign,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=BIGINT},
      signstate = #{record.signstate,jdbcType=INTEGER},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      sign_time = #{record.sign_time,jdbcType=TIMESTAMP},
      userPostImage = #{record.userPostImage,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.qcc.pojo.Profile" >
    update profile
    <set >
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="unionid != null" >
        unionid = #{unionid,jdbcType=VARCHAR},
      </if>
      <if test="address_id != null" >
        address_id = #{address_id,jdbcType=BIGINT},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null" >
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="real_name != null" >
        real_name = #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="idpictures != null" >
        idpictures = #{idpictures,jdbcType=VARCHAR},
      </if>
      <if test="homeaddress != null" >
        homeaddress = #{homeaddress,jdbcType=VARCHAR},
      </if>
      <if test="mysign != null" >
        mysign = #{mysign,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=BIGINT},
      </if>
      <if test="signstate != null" >
        signstate = #{signstate,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="sign_time != null" >
        sign_time = #{sign_time,jdbcType=TIMESTAMP},
      </if>
      <if test="userPostImage != null" >
        userPostImage = #{userPostImage,jdbcType=VARCHAR},
      </if>
    </set>
    where profileid = #{profileid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.qcc.pojo.Profile" >
    update profile
    set user_id = #{user_id,jdbcType=BIGINT},
      unionid = #{unionid,jdbcType=VARCHAR},
      address_id = #{address_id,jdbcType=BIGINT},
      avatar = #{avatar,jdbcType=VARCHAR},
      user_name = #{user_name,jdbcType=VARCHAR},
      real_name = #{real_name,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR},
      idpictures = #{idpictures,jdbcType=VARCHAR},
      homeaddress = #{homeaddress,jdbcType=VARCHAR},
      mysign = #{mysign,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      code = #{code,jdbcType=BIGINT},
      signstate = #{signstate,jdbcType=INTEGER},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      sign_time = #{sign_time,jdbcType=TIMESTAMP},
      userPostImage = #{userPostImage,jdbcType=VARCHAR}
    where profileid = #{profileid,jdbcType=BIGINT}
  </update>
</mapper>