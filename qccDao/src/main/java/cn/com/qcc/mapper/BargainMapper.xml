<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.qcc.mapper.BargainMapper" >
  <resultMap id="BaseResultMap" type="cn.com.qcc.pojo.Bargain" >
    <id column="barginid" property="barginid" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="otherid" property="otherid" jdbcType="BIGINT" />
    <result column="lessbalance" property="lessbalance" jdbcType="DOUBLE" />
    <result column="totalbanalce" property="totalbanalce" jdbcType="DOUBLE" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    barginid, userid, otherid, lessbalance, totalbanalce, type, starttime, endtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.qcc.pojo.BargainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bargain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from bargain
    where barginid = #{barginid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from bargain
    where barginid = #{barginid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.qcc.pojo.BargainExample" >
    delete from bargain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.qcc.pojo.Bargain" >
   <selectKey  resultType="long"  order="AFTER"  keyProperty="barginid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into bargain (barginid, userid, otherid, 
      lessbalance, totalbanalce, type, 
      starttime, endtime)
    values (#{barginid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{otherid,jdbcType=BIGINT}, 
      #{lessbalance,jdbcType=DOUBLE}, #{totalbanalce,jdbcType=DOUBLE}, #{type,jdbcType=INTEGER}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.qcc.pojo.Bargain" >
    <selectKey  resultType="long"  order="AFTER"  keyProperty="barginid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into bargain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="barginid != null" >
        barginid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="otherid != null" >
        otherid,
      </if>
      <if test="lessbalance != null" >
        lessbalance,
      </if>
      <if test="totalbanalce != null" >
        totalbanalce,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="barginid != null" >
        #{barginid,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="otherid != null" >
        #{otherid,jdbcType=BIGINT},
      </if>
      <if test="lessbalance != null" >
        #{lessbalance,jdbcType=DOUBLE},
      </if>
      <if test="totalbanalce != null" >
        #{totalbanalce,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.qcc.pojo.BargainExample" resultType="java.lang.Integer" >
    select count(*) from bargain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bargain
    <set >
      <if test="record.barginid != null" >
        barginid = #{record.barginid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.otherid != null" >
        otherid = #{record.otherid,jdbcType=BIGINT},
      </if>
      <if test="record.lessbalance != null" >
        lessbalance = #{record.lessbalance,jdbcType=DOUBLE},
      </if>
      <if test="record.totalbanalce != null" >
        totalbanalce = #{record.totalbanalce,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bargain
    set barginid = #{record.barginid,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      otherid = #{record.otherid,jdbcType=BIGINT},
      lessbalance = #{record.lessbalance,jdbcType=DOUBLE},
      totalbanalce = #{record.totalbanalce,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.qcc.pojo.Bargain" >
    update bargain
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="otherid != null" >
        otherid = #{otherid,jdbcType=BIGINT},
      </if>
      <if test="lessbalance != null" >
        lessbalance = #{lessbalance,jdbcType=DOUBLE},
      </if>
      <if test="totalbanalce != null" >
        totalbanalce = #{totalbanalce,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where barginid = #{barginid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.qcc.pojo.Bargain" >
    update bargain
    set userid = #{userid,jdbcType=BIGINT},
      otherid = #{otherid,jdbcType=BIGINT},
      lessbalance = #{lessbalance,jdbcType=DOUBLE},
      totalbanalce = #{totalbanalce,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP}
    where barginid = #{barginid,jdbcType=BIGINT}
  </update>
</mapper>