<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.qcc.mapper.BdmanagerMapper" >
  <resultMap id="BaseResultMap" type="cn.com.qcc.pojo.Bdmanager" >
    <id column="bdid" property="bdid" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="upate_time" property="upate_time" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="acctoken" property="acctoken" jdbcType="VARCHAR" />
    <result column="securitytoken" property="securitytoken" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bdid, code, telephone, realname, upate_time, state, password, acctoken, securitytoken, 
    avatar
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.qcc.pojo.BdmanagerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bdmanager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bdmanager
    where bdid = #{bdid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bdmanager
    where bdid = #{bdid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.qcc.pojo.BdmanagerExample" >
    delete from bdmanager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.qcc.pojo.Bdmanager" >
    insert into bdmanager (bdid, code, telephone, 
      realname, upate_time, state, 
      password, acctoken, securitytoken, 
      avatar)
    values (#{bdid,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{upate_time,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{acctoken,jdbcType=VARCHAR}, #{securitytoken,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.qcc.pojo.Bdmanager" >
    insert into bdmanager
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bdid != null" >
        bdid,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="upate_time != null" >
        upate_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="acctoken != null" >
        acctoken,
      </if>
      <if test="securitytoken != null" >
        securitytoken,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bdid != null" >
        #{bdid,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="upate_time != null" >
        #{upate_time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="acctoken != null" >
        #{acctoken,jdbcType=VARCHAR},
      </if>
      <if test="securitytoken != null" >
        #{securitytoken,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.qcc.pojo.BdmanagerExample" resultType="java.lang.Integer" >
    select count(*) from bdmanager
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bdmanager
    <set >
      <if test="record.bdid != null" >
        bdid = #{record.bdid,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null" >
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.upate_time != null" >
        upate_time = #{record.upate_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.acctoken != null" >
        acctoken = #{record.acctoken,jdbcType=VARCHAR},
      </if>
      <if test="record.securitytoken != null" >
        securitytoken = #{record.securitytoken,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bdmanager
    set bdid = #{record.bdid,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      upate_time = #{record.upate_time,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      acctoken = #{record.acctoken,jdbcType=VARCHAR},
      securitytoken = #{record.securitytoken,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.qcc.pojo.Bdmanager" >
    update bdmanager
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="upate_time != null" >
        upate_time = #{upate_time,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="acctoken != null" >
        acctoken = #{acctoken,jdbcType=VARCHAR},
      </if>
      <if test="securitytoken != null" >
        securitytoken = #{securitytoken,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
    </set>
    where bdid = #{bdid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.qcc.pojo.Bdmanager" >
    update bdmanager
    set code = #{code,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      upate_time = #{upate_time,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      acctoken = #{acctoken,jdbcType=VARCHAR},
      securitytoken = #{securitytoken,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR}
    where bdid = #{bdid,jdbcType=VARCHAR}
  </update>

  
  
  
  <select id="searchBDByPhoneOrId" resultType="cn.com.qcc.pojo.Bdmanager">
  		SELECT * from bdmanager where bdid = #{account} or telephone = #{account}
  </select>
  
  
  
   <select id="searchUserToLand" resultType="cn.com.qcc.queryvo.UserRoomCustomer">
  		SELECT
				`profile`.user_id userid, 
				`profile`.real_name realname, 
				`user`.telephone , 
				 IFNULL(landlord.address,'')address ,
				 IFNULL(landlord.brandname,'') brandname, 
				 IFNULL(landlord.businessnum,'')businessnum ,
                 IFNULL(landlord.businesspicture,'')businesspicture ,
				 IFNULL(landlord.corporate,'')corporate ,
				 IFNULL(area.`name`,'') trading ,
				 area.`code`  
			FROM
				`profile`
			INNER JOIN `user` on `user`.userid = `profile`.user_id
			LEFT JOIN landlord ON `user`.userid = landlord.landuserid
			LEFT JOIN area on area.`code` = landlord.`code`
			WHERE
				`profile`.signstate = 2
			AND `profile`.user_id NOT IN (
				SELECT  landuserid
				FROM
					landlord
				WHERE
					landstate = 2
					and landlord.bdid != '' 
			)
			AND `profile`.user_id NOT IN (
				SELECT  manageruserid
				FROM
					landlord_manager
				WHERE
					landlord_manager.state = 2
			)
			<if test="searchWhere !=null and searchWhere !=''">
				and  (   `user`.telephone like CONCAT('%',#{searchWhere},'%') 
				 or `profile`.real_name like CONCAT('%',#{searchWhere},'%')
				      )
			</if>
			LIMIT 0,  50
  </select>
  
  
   <select id="getLandList" resultType="cn.com.qcc.queryvo.UserRoomCustomer"
   	parameterType = "cn.com.qcc.queryvo.UserRoomCustomer" >
  		SELECT
			landlord.landuserid userid,
			landlord.landstate  ,
			`user`.telephone , 
			landlord.update_time updatetime ,
			IFNULL( `profile`.real_name,`profile`.user_name ) realname ,
			`profile`.avatar  ,
			IFNULL(area.`name`   ,'未知') cityname 
		FROM
			landlord
		LEFT JOIN `profile` on `profile`.user_id = landlord.landuserid
		LEFT JOIN  `user` on user.userid = `profile`.user_id
		LEFT JOIN area on area.`code` = landlord.`code` 
		WHERE
		landlord.bdid = #{bdid}
		<if test="code !=null">
				AND landlord.code = #{code}
		</if>
  </select>
  
  
  
   <select id="searchAddBuildingToland" resultType="cn.com.qcc.queryvo.BuildingCustomer"
   	>
  		SELECT
				building.building ,
				village.villagename ,
				area.`name` trading ,
				building.buildingid 
			
			FROM
				building
			INNER  JOIN village on village.villageid = building.villageid 
			INNER JOIN area on area.`code` = village.`code` 
			
			where building.buildingid not in (
			
			SELECT buildingid from buildinglandlord
			)
			AND building.identity like CONCAT('%',#{searchWhere},'%')
			LIMIT 0, 40
  </select>
  
  
  
    <select id="searchBuildingBylandId" resultType="cn.com.qcc.queryvo.BuildingCustomer"
   	>
  		SELECT
				building.building ,
				village.villagename ,
				area.`name` trading ,
				building.buildingid 
			
			FROM
				building
			INNER  JOIN village on village.villageid = building.villageid 
			INNER JOIN area on area.`code` = village.`code` 
			
			where building.buildingid  in (
			
				SELECT buildinglandlord.buildingid  from
				buildinglandlord where buildinglandlord.landlordid = #{userid}
			)
  </select>
  
  
  
  
   <select id="bdlandeditsearch" resultType="cn.com.qcc.queryvo.UserRoomCustomer"
   	>
  		SELECT
			landuserid userid  ,
			landlord.`code` ,
			IFNULL(landlord.brandname,'')brandname , 
			IFNULL(landlord.corporate,'') corporate ,
			IFNULL(landlord.idpictures,'') idpictures ,
			IFNULL(landlord.businessnum,'')businessnum ,
			IFNULL(landlord.address,'') address ,
			`user`.telephone ,
			IFNULL(`profile`.real_name,`profile`.user_name) realname ,
			area.`name` trading 
		FROM
			landlord
		LEFT JOIN `user` on `user`.userid = landlord.landuserid
		LEFT JOIN `profile` on `profile`.user_id = `user`.userid
		LEFT JOIN area on area.`code` = landlord.`code`
		
		where `user`.userid = #{userid}
  </select>
  
  
    
  <select id="findOne" resultType="cn.com.qcc.pojo.Bdmanager">
  		SELECT bdmanager.* ,
			 IFNULL(area.`name`,'中国')address
	from bdmanager
	LEFT JOIN area on area.`code` = bdmanager.`code` 
  		where bdid = #{bdid}
  </select>
  
  
  <select id="listBD" resultType="cn.com.qcc.pojo.Bdmanager">
  		SELECT bdmanager.* ,
			 IFNULL(area.`name`,'中国')address
	from bdmanager
	LEFT JOIN area on area.`code` = bdmanager.`code` 
  </select>
</mapper>