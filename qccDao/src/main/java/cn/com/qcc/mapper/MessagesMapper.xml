<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.qcc.mapper.MessagesMapper" >
  <resultMap id="BaseResultMap" type="cn.com.qcc.pojo.Messages" >
    <id column="messagesid" property="messagesid" jdbcType="BIGINT" />
    <result column="house_id" property="house_id" jdbcType="BIGINT" />
    <result column="user_id" property="user_id" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="mes" property="mes" jdbcType="VARCHAR" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    messagesid, house_id, user_id, type, state, mes, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.qcc.pojo.MessagesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from messages
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from messages
    where messagesid = #{messagesid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from messages
    where messagesid = #{messagesid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.qcc.pojo.MessagesExample" >
    delete from messages
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.qcc.pojo.Messages" >
  <selectKey  resultType="long"  order="AFTER"  keyProperty="messagesid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into messages (messagesid, house_id, user_id, 
      type, state, mes, create_time, 
      update_time)
    values (#{messagesid,jdbcType=BIGINT}, #{house_id,jdbcType=BIGINT}, #{user_id,jdbcType=BIGINT}, 
      #{type,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{mes,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{update_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.qcc.pojo.Messages" >
  <selectKey  resultType="long"  order="AFTER"  keyProperty="messagesid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into messages
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messagesid != null" >
        messagesid,
      </if>
      <if test="house_id != null" >
        house_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="mes != null" >
        mes,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messagesid != null" >
        #{messagesid,jdbcType=BIGINT},
      </if>
      <if test="house_id != null" >
        #{house_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="mes != null" >
        #{mes,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.qcc.pojo.MessagesExample" resultType="java.lang.Integer" >
    select count(*) from messages
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update messages
    <set >
      <if test="record.messagesid != null" >
        messagesid = #{record.messagesid,jdbcType=BIGINT},
      </if>
      <if test="record.house_id != null" >
        house_id = #{record.house_id,jdbcType=BIGINT},
      </if>
      <if test="record.user_id != null" >
        user_id = #{record.user_id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.mes != null" >
        mes = #{record.mes,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null" >
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update messages
    set messagesid = #{record.messagesid,jdbcType=BIGINT},
      house_id = #{record.house_id,jdbcType=BIGINT},
      user_id = #{record.user_id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      mes = #{record.mes,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.qcc.pojo.Messages" >
    update messages
    <set >
      <if test="house_id != null" >
        house_id = #{house_id,jdbcType=BIGINT},
      </if>
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="mes != null" >
        mes = #{mes,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where messagesid = #{messagesid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.qcc.pojo.Messages" >
    update messages
    set house_id = #{house_id,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      mes = #{mes,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where messagesid = #{messagesid,jdbcType=BIGINT}
  </update>
  
  
   <!-- 查询当前用户的房间的留言信息 -->
  	<select  id="selectComment" resultType="cn.com.qcc.queryvo.UserCustomer" >
	select m.*,p.user_name as user_name  , p.avatar from messages m,profile p,
	(SELECT ho.houseid from house ho where ho.user_id=#{userid}) h 
	where m.user_id=p.user_id and m.house_id in (h.houseid) 
	ORDER BY m.create_time desc 
	<!-- 分页的查询条件 -->
	<if test="pagequery !=null ">
		limit #{pagequery.pagestart} , #{pagequery.pagesize}
	</if>
	</select>
		<select  id="selectCommentCount" resultType="integer" >
	select  count(1) from messages m,profile p,
	(SELECT ho.houseid from house ho where ho.user_id=#{userid}) h 
	where m.user_id=p.user_id and m.house_id in (h.houseid) 
	</select>
	
	<!-- 房屋详情显示留言列表 -->
	<select id="findMessagesByHouse" resultType="cn.com.qcc.queryvo.UserCustomer" parameterType="cn.com.qcc.queryvo.HouseVo" >
		select
		*
		from messages
		inner join user
		on
		messages.user_id=user.userid
		inner join profile
		on
		messages.user_id=profile.user_id
		where
		house_id=#{house_id} and messages.type = #{messagesType} and messages.state='1'
		order by
		messages.update_time desc
	</select>
	
	<!-- 房屋详情显示留言列表的数量 -->
	<select id="findMessagesByHouseCount" resultType="int">
		select
		count(*)
		from messages
		inner join user
		on
		messages.user_id=user.userid
		inner join profile
		on
		messages.user_id=profile.user_id
		where
		house_id=#{house_id} and messages.type = #{type} and messages.state='1'
	</select>
	
	 <!-- 消息回复 -->
  <select id="messreply" parameterType="integer" resultType="cn.com.qcc.queryvo.MessReply">
	  SELECT	u.user_id uid , f.user_id fid,messagesreply.messagesreplyid,
	u.user_name uname ,f.user_name fname,messagesreply.messagesid,messagesreply.update_time ,messagesreply.reply
	from messagesreply 
		INNER JOIN (SELECT user_id ,avatar,user_name from `profile`)u on messagesreply.userid = u.user_id
		INNER JOIN (SELECT user_id,avatar ,user_name from `profile`)f on messagesreply.followUserid = f.user_id
	where messagesreply.messagesid = #{messid}
	ORDER BY messagesreply.update_time asc
  </select>
  
</mapper>