<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.qcc.mapper.PriceMapper" >
  <resultMap id="BaseResultMap" type="cn.com.qcc.pojo.Price" >
    <id column="priceid" property="priceid" jdbcType="BIGINT" />
    <result column="pricetype" property="pricetype" jdbcType="VARCHAR" />
    <result column="prices" property="prices" jdbcType="DOUBLE" />
    <result column="create_time" property="create_time" jdbcType="DATE" />
    <result column="update_time" property="update_time" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    priceid, pricetype, prices, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.qcc.pojo.PriceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from price
    where priceid = #{priceid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from price
    where priceid = #{priceid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.qcc.pojo.PriceExample" >
    delete from price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.qcc.pojo.Price" >
   <selectKey  resultType="long"  order="AFTER"  keyProperty="priceid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into price (priceid, pricetype, prices, 
      create_time, update_time)
    values (#{priceid,jdbcType=BIGINT}, #{pricetype,jdbcType=VARCHAR}, #{prices,jdbcType=DOUBLE}, 
      #{create_time,jdbcType=DATE}, #{update_time,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.qcc.pojo.Price" >
     <selectKey  resultType="long"  order="AFTER"  keyProperty="priceid" >
            SELECT LAST_INSERT_ID() 
    </selectKey>
    insert into price
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="priceid != null" >
        priceid,
      </if>
      <if test="pricetype != null" >
        pricetype,
      </if>
      <if test="prices != null" >
        prices,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="update_time != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="priceid != null" >
        #{priceid,jdbcType=BIGINT},
      </if>
      <if test="pricetype != null" >
        #{pricetype,jdbcType=VARCHAR},
      </if>
      <if test="prices != null" >
        #{prices,jdbcType=DOUBLE},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=DATE},
      </if>
      <if test="update_time != null" >
        #{update_time,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.qcc.pojo.PriceExample" resultType="java.lang.Integer" >
    select count(*) from price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update price
    <set >
      <if test="record.priceid != null" >
        priceid = #{record.priceid,jdbcType=BIGINT},
      </if>
      <if test="record.pricetype != null" >
        pricetype = #{record.pricetype,jdbcType=VARCHAR},
      </if>
      <if test="record.prices != null" >
        prices = #{record.prices,jdbcType=DOUBLE},
      </if>
      <if test="record.create_time != null" >
        create_time = #{record.create_time,jdbcType=DATE},
      </if>
      <if test="record.update_time != null" >
        update_time = #{record.update_time,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update price
    set priceid = #{record.priceid,jdbcType=BIGINT},
      pricetype = #{record.pricetype,jdbcType=VARCHAR},
      prices = #{record.prices,jdbcType=DOUBLE},
      create_time = #{record.create_time,jdbcType=DATE},
      update_time = #{record.update_time,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.qcc.pojo.Price" >
    update price
    <set >
      <if test="pricetype != null" >
        pricetype = #{pricetype,jdbcType=VARCHAR},
      </if>
      <if test="prices != null" >
        prices = #{prices,jdbcType=DOUBLE},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=DATE},
      </if>
      <if test="update_time != null" >
        update_time = #{update_time,jdbcType=DATE},
      </if>
    </set>
    where priceid = #{priceid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.qcc.pojo.Price" >
    update price
    set pricetype = #{pricetype,jdbcType=VARCHAR},
      prices = #{prices,jdbcType=DOUBLE},
      create_time = #{create_time,jdbcType=DATE},
      update_time = #{update_time,jdbcType=DATE}
    where priceid = #{priceid,jdbcType=BIGINT}
  </update>
</mapper>